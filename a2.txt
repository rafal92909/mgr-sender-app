DEBUG
1. 
a2 debug
Install the "Debugger for Chrome"-Extension
Delete the launch.json and create a new one (select "Chrome" instead of "Node.js").
Change the port to 3000 (if you use lite-server, like in the tour-of-heroes-tutorial) and add an "userDataDir":
example:

{
    "name": "Launch Chrome against localhost, with sourcemaps",
    "type": "chrome",
    "request": "launch",
    "url": "http://localhost:3000",
    "sourceMaps": true,
    "webRoot": "${workspaceRoot}",
    "userDataDir": "${workspaceRoot}/out/chrome"
}
Start the s


2. !!!
debug
npm install --global --production windows-build-tools

1 instalacja
 npm install -g node-inspector@0.7

2 konsole
2.1 konsola 1 - uruchamiamy apke z trybem debug
node --debug-brk hello-debug.js
lub:
node --debug hello-debug.js
2.2 uruchamiamy debugera
node-inspector  --web-port=9999
3 przegladarka
3.1 pierwsza karta to debuger http://127.0.0.1:8080/debug?port=5858
3.2 druga karta to aplikacja 127.0.0.1:1337


GIT
create repo with VS code and GitHub

1. zainstaluj gita ze strony ktora podpowiada VSC
2. odpal git bash
3. ustaw:
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR EMAIL ADDRESS"
git config --global credential.helper wincred

postepuj zgodnie z filmikiem (https://www.youtube.com/watch?v=MuFky3vdWpo) (
	utworz repo na github, 
	w VSC zakladka git - initialize repo, 
	zrob stage all,
	wpisz message commitu i kliknij "ptaszka", 
	odpal terminal w VSC (VIEW -> integrated terminal), 
	wykonaj polecenia dostepne po utworzeniu repo na stronie githuba:
		git remote add origin https://github.com/rafal92909/ng2_test.git
		git push -u origin master
)




learn git
https://try.github.io/levels/1/challenges/1
